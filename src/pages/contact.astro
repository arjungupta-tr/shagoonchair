---
import Layout from "../layouts/Layout.astro";
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";
import type { ContactData } from "../types/contact";
import contactDataRaw from "../data/contactData.json";

const contactData = contactDataRaw as ContactData;
---

<Layout
    title={contactData.page.title}
    description={contactData.page.description}
>
    <Navigation />

    <!-- Hero Section -->
    <section class="contact-hero">
        <div class="container">
            <div class="hero-content">
                <h1 class="hero-title fade-in-up">{contactData.hero.title}</h1>
                <p class="hero-description fade-in-up">
                    {contactData.hero.description}
                </p>
            </div>
        </div>
    </section>

    <!-- Contact Information -->
    <section class="section contact-info-section">
        <div class="container">
            <div class="section-header text-center mb-4">
                <h2>{contactData.contactInfo.title}</h2>
                <p>
                    {contactData.contactInfo.subtitle}
                </p>
            </div>

            <div class="grid grid-3">
                {contactData.contactInfo.items.map((item) => (
                    <div class="contact-info-card card">
                        <div class="info-icon">
                            <svg
                                width="48"
                                height="48"
                                fill="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <Fragment set:html={item.icon} />
                            </svg>
                        </div>
                        <h3>{item.title}</h3>
                        {item.details.map((detail) => (
                            <p>
                                <strong>{detail.label}:</strong><br />
                                <Fragment set:html={detail.value} />
                            </p>
                        ))}
                    </div>
                ))}
            </div>
        </div>
    </section>

    <!-- Interactive Map Section -->
    <section class="section section-alt map-section">
        <div class="container">
            <div class="section-header text-center mb-4">
                <h2>{contactData.map.title}</h2>
                <p>
                    {contactData.map.subtitle}
                </p>
            </div>

            <div class="map-layout">
                <!-- Main Map Container -->
                <div class="map-container">
                    <div class="google-maps-wrapper">
                        <!-- Google Maps Embed -->
                        <iframe
                            src={contactData.map.embedUrl}
                            width="100%"
                            height="500"
                            style="border:0;"
                            allowfullscreen=""
                            loading="lazy"
                            referrerpolicy="no-referrer-when-downgrade"
                            title="Shagoon Seating Chair Location"
                        >
                        </iframe>

                        <!-- Map Controls Overlay -->
                        <div class="map-controls">
                            <button
                                class="map-control-btn"
                                onclick="openGoogleMaps()"
                                title="Open in Google Maps"
                            >
                                <svg
                                    width="20"
                                    height="20"
                                    fill="currentColor"
                                    viewBox="0 0 24 24"
                                >
                                    <path
                                        d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"
                                    ></path>
                                </svg>
                                View Larger
                            </button>

                            <button
                                class="map-control-btn"
                                onclick="getDirections()"
                                title="Get Directions"
                            >
                                <svg
                                    width="20"
                                    height="20"
                                    fill="currentColor"
                                    viewBox="0 0 24 24"
                                >
                                    <path d="M3 13h8V3h2v10h8l-9 9-9-9z"></path>
                                </svg>
                                Directions
                            </button>

                            <button
                                class="map-control-btn"
                                onclick="shareLocation()"
                                title="Share Location"
                            >
                                <svg
                                    width="20"
                                    height="20"
                                    fill="currentColor"
                                    viewBox="0 0 24 24"
                                >
                                    <path
                                        d="M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92-1.31-2.92-2.92-2.92z"
                                    ></path>
                                </svg>
                                Share
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Location Info Panel -->
                <div class="location-info-panel">
                    <div class="location-details">
                        <h3>üìç {contactData.map.businessName}</h3>
                        <p class="address">{contactData.map.address}</p>

                        <div class="info-grid">
                            {contactData.map.details.map((detail) => (
                                <div class="info-item">
                                    <h4>{detail.icon} {detail.title}</h4>
                                    <p>
                                        <Fragment set:html={detail.info} />
                                    </p>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Contact Form Section -->

    {contactData.contactForm.isVisible &&    <section class="section contact-form-section">
        <div class="container">
            <div class="section-header text-center mb-4">
                <h2>{contactData.contactForm.title}</h2>
                <p>
                    {contactData.contactForm.subtitle}
                </p>
            </div>

            <div class="contact-form-container">
                <form class="contact-form" action="#" method="POST">
                    <div class="form-grid">
                        {contactData.contactForm.fields.map((field) => (
                            <div class={`form-group ${field.type === 'textarea' ? 'form-group-full' : ''}`}>
                                <label for={field.name} class="form-label">
                                    {field.label}
                                    {field.required && <span class="required">*</span>}
                                </label>
                                {field.type === 'select' ? (
                                    <select
                                        id={field.name}
                                        name={field.name}
                                        class="form-input"
                                        required={field.required}
                                    >
                                        <option value="">Choose {field.label}</option>
                                        {field.options?.map((option) => (
                                            <option value={option}>{option}</option>
                                        ))}
                                    </select>
                                ) : field.type === 'textarea' ? (
                                    <textarea
                                        id={field.name}
                                        name={field.name}
                                        class="form-input"
                                        placeholder={field.placeholder}
                                        rows={field.rows || 5}
                                        required={field.required}
                                    ></textarea>
                                ) : (
                                    <input
                                        type={field.type}
                                        id={field.name}
                                        name={field.name}
                                        class="form-input"
                                        placeholder={field.placeholder}
                                        required={field.required}
                                    />
                                )}
                            </div>
                        ))}
                    </div>
                    
                    <div class="form-submit">
                        <button type="submit" class="btn btn-primary btn-large">
                            {contactData.contactForm.submitText}
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </section>}
 

    <!-- FAQ Section -->
    <section class="section section-alt faq-section">
        <div class="container">
            <div class="section-header text-center mb-4">
                <h2>{contactData.faqs.title}</h2>
                <p>
                    {contactData.faqs.subtitle}
                </p>
            </div>

            <div class="faq-container">
                {contactData.faqs.items.map((faq, index) => (
                    <div class="faq-item">
                        <button
                            class="faq-question"
                            onclick={`toggleFAQ(this)`}
                            aria-expanded="false"
                        >
                            <span>{faq.question}</span>
                            <svg
                                width="24"
                                height="24"
                                fill="currentColor"
                                viewBox="0 0 24 24"
                            >
                                <path d="M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
                            </svg>
                        </button>
                        <div class="faq-answer">
                            <p>{faq.answer}</p>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    </section>

    <Footer />
</Layout>

<style>
    /* Add spacing for fixed navbar */
    .contact-hero {
        padding-top: 100px;
    }

    /* Hero Section */
    .contact-hero {
        background: linear-gradient(
            135deg,
            var(--primary-color) 0%,
            var(--accent-color) 100%
        );
        color: white;
        padding: 100px 0 4rem;
        text-align: center;
    }

    .hero-title {
        color: white;
        margin-bottom: 1rem;
    }

    .hero-description {
        font-size: 1.3rem;
        color: rgba(255, 255, 255, 0.9);
        max-width: 600px;
        margin: 0 auto;
    }

    /* Contact Info Cards */
    .contact-info-card {
        text-align: center;
        padding: 2rem;
    }

    .info-icon {
        width: 80px;
        height: 80px;
        background: var(--accent-color);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto 1.5rem;
    }

    .contact-info-card h3 {
        margin-bottom: 1rem;
        color: var(--primary-color);
    }

    .contact-info-card p {
        margin-bottom: 1rem;
        line-height: 1.6;
    }

    /* Map Section */
    .map-section {
        background: white;
    }

    .map-layout {
        display: grid;
        grid-template-columns: 2fr 1fr;
        gap: 2rem;
        align-items: start;
    }

    .map-container {
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--shadow-hover);
        position: relative;
        background: white;
    }

    .google-maps-wrapper {
        position: relative;
        width: 100%;
        height: 500px;
    }

    .google-maps-wrapper iframe {
        width: 100%;
        height: 100%;
        border: none;
        border-radius: var(--border-radius);
    }

    .interactive-map {
        position: relative;
        width: 100%;
        min-height: 500px;
    }

    .map-controls {
        position: absolute;
        top: 1rem;
        right: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .map-control-btn {
        background: rgba(255, 255, 255, 0.95);
        color: var(--primary-color);
        border: 1px solid var(--border-color);
        padding: 0.75rem 1rem;
        border-radius: var(--border-radius);
        cursor: pointer;
        font-weight: 500;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: var(--transition);
        box-shadow: var(--shadow);
        font-size: 0.9rem;
        backdrop-filter: blur(10px);
    }

    .map-control-btn:hover {
        background: var(--accent-color);
        color: white;
        transform: translateY(-2px);
        box-shadow: var(--shadow-hover);
    }

    .location-info-panel {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        padding: 2rem;
        height: fit-content;
    }

    .location-details h3 {
        color: var(--primary-color);
        margin-bottom: 1rem;
        font-size: 1.3rem;
    }

    .address {
        color: var(--text-light);
        margin-bottom: 2rem;
        font-size: 1.1rem;
        line-height: 1.6;
    }

    /* Contact Form Section */
    .contact-form-section {
        background: white;
    }

    .contact-form-container {
        max-width: 800px;
        margin: 0 auto;
    }

    .contact-form {
        background: white;
        padding: 3rem;
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        border: 1px solid var(--border-color);
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .form-group-full {
        grid-column: 1 / -1;
    }

    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        color: var(--primary-color);
        font-weight: 500;
        font-size: 0.95rem;
    }

    .required {
        color: var(--accent-color);
        margin-left: 0.25rem;
    }

    .form-input {
        width: 100%;
        padding: 1rem;
        border: 2px solid var(--border-color);
        border-radius: var(--border-radius);
        font-size: 1rem;
        transition: var(--transition);
        background: white;
        font-family: inherit;
    }

    .form-input:focus {
        outline: none;
        border-color: var(--accent-color);
        box-shadow: 0 0 0 3px rgba(230, 126, 34, 0.1);
    }

    .form-input::placeholder {
        color: var(--text-light);
    }

    textarea.form-input {
        resize: vertical;
        min-height: 120px;
    }

    .form-submit {
        text-align: center;
    }

    .btn-large {
        padding: 1rem 2.5rem;
        font-size: 1.1rem;
    }

    .info-grid {
        display: grid;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .info-item h4 {
        color: var(--primary-color);
        margin-bottom: 0.5rem;
        font-size: 1rem;
    }

    .info-item p {
        color: var(--text-light);
        margin: 0;
        line-height: 1.6;
    }

    .directions-panel {
        border-top: 1px solid var(--border-color);
        padding-top: 2rem;
    }

    .directions-panel h4 {
        color: var(--primary-color);
        margin-bottom: 1rem;
    }

    .direction-options {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .direction-option {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1rem;
        background: var(--background-alt);
        border-radius: var(--border-radius);
        transition: var(--transition);
    }

    .direction-option:hover {
        background: rgba(230, 126, 34, 0.1);
        transform: translateX(5px);
    }

    .direction-icon {
        font-size: 1.5rem;
        flex-shrink: 0;
    }

    .direction-option strong {
        color: var(--primary-color);
        display: block;
        margin-bottom: 0.25rem;
    }

    .direction-option p {
        margin: 0;
        color: var(--text-light);
        font-size: 0.9rem;
        line-height: 1.5;
    }

    /* FAQ Section */
    .faq-container {
        max-width: 800px;
        margin: 0 auto;
    }

    .faq-item {
        margin-bottom: 1rem;
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        overflow: hidden;
    }

    .faq-question {
        width: 100%;
        padding: 1.5rem;
        background: white;
        border: none;
        text-align: left;
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 1.1rem;
        font-weight: 500;
        color: var(--primary-color);
        transition: var(--transition);
    }

    .faq-question:hover {
        background: var(--background-alt);
    }

    .faq-question svg {
        transition: var(--transition);
        color: var(--accent-color);
    }

    .faq-question.active svg {
        transform: rotate(45deg);
    }

    .faq-answer {
        padding: 0 1.5rem;
        max-height: 0;
        overflow: hidden;
        transition: all 0.3s ease;
        background: var(--background-alt);
    }

    .faq-answer.active {
        padding: 1.5rem;
        max-height: 200px;
    }

    .faq-answer p {
        margin: 0;
        color: var(--text-light);
        line-height: 1.6;
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
        .map-layout {
            grid-template-columns: 1fr;
            gap: 2rem;
        }

        .location-info-panel {
            padding: 1.5rem;
        }

        .contact-form {
            padding: 2rem;
        }
    }

    @media (max-width: 768px) {
        .contact-hero {
            padding: 80px 0 3rem;
        }

        .form-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .contact-form {
            padding: 1.5rem;
        }

        .map-controls {
            position: static;
            flex-direction: row;
            justify-content: center;
            padding: 1rem;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
        }

        .map-control-btn {
            font-size: 0.8rem;
            padding: 0.5rem 0.75rem;
        }

        .interactive-map {
            min-height: 400px;
        }

        .google-maps-wrapper {
            height: 400px;
        }

        .faq-question {
            padding: 1rem;
            font-size: 1rem;
        }

        .faq-answer.active {
            padding: 1rem;
        }

        .info-grid {
            gap: 1rem;
        }

        .direction-option {
            flex-direction: column;
            gap: 0.5rem;
            text-align: center;
        }
    }

    @media (max-width: 480px) {
        .contact-info-card {
            padding: 1.5rem;
        }

        .info-icon {
            width: 60px;
            height: 60px;
        }

        .contact-form {
            padding: 1rem;
        }

        .btn-large {
            padding: 0.875rem 2rem;
            font-size: 1rem;
        }

        .interactive-map {
            min-height: 350px;
        }

        .google-maps-wrapper {
            height: 350px;
        }

        .location-info-panel {
            padding: 1rem;
        }

        .map-controls {
            flex-direction: column;
            gap: 0.5rem;
        }
    }

    /* Animation delays */
    .fade-in-up:nth-child(1) {
        animation-delay: 0.1s;
    }
    .fade-in-up:nth-child(2) {
        animation-delay: 0.3s;
    }
</style>

<script>
    // FAQ toggle functionality
    function toggleFAQ(button: HTMLButtonElement) {
        const faqItem = button.parentElement;
        const answer = faqItem?.querySelector(".faq-answer") as HTMLDivElement;
        const isActive = button.classList.contains("active");

        // Close all other FAQs
        document.querySelectorAll(".faq-question").forEach((q) => {
            q.classList.remove("active");
            const answerEl = q.parentElement?.querySelector(".faq-answer");
            if (answerEl) {
                answerEl.classList.remove("active");
            }
        });

        // Toggle current FAQ
        if (!isActive && answer) {
            button.classList.add("active");
            answer.classList.add("active");
        }
    }

    // Map functionality
    function openGoogleMaps() {
        const mapUrl =
            "https://www.google.com/maps/place/Shagoon+Seating+Chair/@19.1728133,72.8528071,17z/data=!3m1!4b1!4m6!3m5!1s0x3be7b7aa451f8c29:0x5014ba2277683121!8m2!3d19.1728133!4d72.8553874!16s%2Fg%2F11y1j9_6mk";
        window.open(mapUrl, "_blank");
    }

    function getDirections() {
        const directionsUrl =
            "https://www.google.com/maps/dir/?api=1&destination=Shagoon+Seating+Chair,Mumbai,Maharashtra,India&destination_place_id=ChIJKYwfRaq3xzcRITE2J2K6FFA";
        window.open(directionsUrl, "_blank");
    }

    function shareLocation() {
        const businessName = "Shagoon Seating Chair";
        const location = "Mumbai, Maharashtra, India";

        if (navigator.share) {
            navigator
                .share({
                    title: businessName,
                    text: "Visit our furniture showroom",
                    url: "https://www.google.com/maps/place/Shagoon+Seating+Chair/@19.1728133,72.8528071,17z/",
                })
                .catch(console.error);
        } else {
            // Fallback: copy to clipboard
            const url =
                "https://www.google.com/maps/place/Shagoon+Seating+Chair/@19.1728133,72.8528071,17z/";
            navigator.clipboard
                .writeText(url)
                .then(() => {
                    alert("Location link copied to clipboard!");
                })
                .catch(() => {
                    alert(`Location: ${businessName}, ${location}`);
                });
        }
    }

    // Make functions available globally
    (window as any).toggleFAQ = toggleFAQ;
    (window as any).openGoogleMaps = openGoogleMaps;
    (window as any).getDirections = getDirections;
    (window as any).shareLocation = shareLocation;
</script>
